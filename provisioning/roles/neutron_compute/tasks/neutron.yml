--- 
#############################################
##### Open Virtual Network Installation #####
#############################################
- name: install open virtual network packages
  yum: name="{{ packages }}" state=latest
  vars:
    packages:
    - wget
    - openssl-devel
    - python-sphinx
    - gcc
    - make
    - python-devel
    - openssl-devel
    - kernel-devel
    - graphviz
    - kernel-debug-devel
    - autoconf
    - automake
    - rpm-build
    - redhat-rpm-config
    - libtool
    - python-twisted-core
    - python-zope-interface
    - PyQt4
    - desktop-file-utils
    - libcap-ng-devel
    - groff
    - checkpolicy
    - selinux-policy-devel
    - python-six
    - gcc-c++
    - unbound-devel
    - unbound

- name: Create rpmbuild directory
  file:
    path: /root/rpmbuild/SOURCES
    state: directory

- name: Download and extract openvswitch
  unarchive:
    src: https://www.openvswitch.org/releases/openvswitch-2.11.0.tar.gz
    dest: /root/
    remote_src: yes

- name: Download openvswitch
  get_url:
    url: https://www.openvswitch.org/releases/openvswitch-2.11.0.tar.gz
    dest: /root/rpmbuild/SOURCES/openvswitch-2.11.0.tar.gz

- name: build Open vSwitch
  shell: cd /root && rpmbuild -bb --nocheck /root/openvswitch-2.11.0/rhel/openvswitch-fedora.spec

- name: build Open Virtual Network
  shell: cd /root && rpmbuild -bb --nocheck /root/openvswitch-2.11.0/rhel/ovn-fedora.spec

- name: install open virtual network packages
  yum: name="{{ packages }}" state=latest
  vars:
    packages:
    - /root/rpmbuild/RPMS/x86_64/openvswitch-2.11.0-1.el7.x86_64.rpm
    - /root/rpmbuild/RPMS/x86_64/openvswitch-devel-2.11.0-1.el7.x86_64.rpm
    - /root/rpmbuild/RPMS/x86_64/ovn-2.11.0-1.el7.x86_64.rpm
    - /root/rpmbuild/RPMS/x86_64/ovn-host-2.11.0-1.el7.x86_64.rpm
    - /root/rpmbuild/RPMS/x86_64/ovn-common-2.11.0-1.el7.x86_64.rpm

- name: install neutron packages
  yum: name="{{ packages }}" state=latest
  vars:
    packages:
    - openstack-neutron
    - python-networking-ovn-metadata-agent

- name: start openvswitch service
  service: name=openvswitch state=started enabled=yes

- name: config openvswitch
  shell: ovs-vsctl set open . external-ids:ovn-remote=tcp:{{ openstack.controller[0].ip_man }}:6642

- name: config openvswitch
  shell: ovs-vsctl set open . external-ids:ovn-encap-type=geneve
  
- name: config openvswitch
  shell: ovs-vsctl set open . external-ids:ovn-encap-ip={{ hostvars[inventory_hostname]['ansible_eth1']['ipv4']['address'] }} 

- name: Enable l3ha support for compute
  shell: ovs-vsctl set open . external-ids:ovn-cms-options=enable-chassis-as-gw

- name: create br-provider interface configuration file
  template: src=ifcfg-br-provider.j2 dest=/etc/sysconfig/network-scripts/ifcfg-br-provider

- name: create eth3 interface configuration file
  template: src=ifcfg-eth3.j2 dest=/etc/sysconfig/network-scripts/ifcfg-eth3

- name: restart external interfaces
  shell: ifdown eth3; ifdown br-provider; ifup br-provider; ifup eth3

- name: configure external interfaces
  shell: ovs-vsctl set open . external-ids:ovn-bridge-mappings=provider:br-provider

- name: create ovn-controller configuration file
  template: src=ovn-controller.service.j2 dest=/usr/lib/systemd/system/ovn-controller.service

- name: start ovn-controller service
  service: name=ovn-controller state=restarted enabled=yes daemon_reload=yes

- name: ovn-metadata-agent
  template: src=networking-ovn-metadata-agent.ini.j2 dest=/etc/neutron/plugins/networking-ovn/networking-ovn-metadata-agent.ini

- name: change user ovn-metadata-agent
  shell: sed -i 's/User=neutron/User=root/g' /usr/lib/systemd/system/networking-ovn-metadata-agent.service

- name: start networking-ovn-metadata-agent service
  service: name=networking-ovn-metadata-agent state=restarted enabled=yes daemon_reload=yes
