---
- name: create nova database
  mysql_db: login_user=root login_password={{ root_dbpw }} name=nova state=present

- name: create nova_api database
  mysql_db: login_user=root login_password={{ root_dbpw }} name=nova_api state=present

- name: create nova_cell0 database
  mysql_db: login_user=root login_password={{ root_dbpw }} name=nova_cell0 state=present

##### nova Database #####

- name: grant nova database local host access
  mysql_user: login_user=root login_password={{ root_dbpw }} name=nova password={{ nova_dbpw }} append_privs=true priv='nova.*:ALL'

- name: grant nova database controller host access
  mysql_user: login_user=root login_password={{ root_dbpw }} name=nova password={{ nova_dbpw }} append_privs=true priv='nova.*:ALL' host={{ hostvars[inventory_hostname]['ansible_eth1']['ipv4']['address'] }}

##### nova_api Database #####

- name: grant nova_api database local host access
  mysql_user: login_user=root login_password={{ root_dbpw }} name=nova password={{ nova_dbpw }} append_privs=true priv='nova_api.*:ALL'

- name: grant nova_api database controller host access
  mysql_user: login_user=root login_password={{ root_dbpw }} name=nova password={{ nova_dbpw }} append_privs=true priv='nova_api.*:ALL' host={{ hostvars[inventory_hostname]['ansible_eth1']['ipv4']['address'] }}

##### nova_cell0 Database #####

- name: grant nova_cell0 database local host access
  mysql_user: login_user=root login_password={{ root_dbpw }} name=nova password={{ nova_dbpw }} append_privs=true priv='nova_cell0.*:ALL'

- name: grant nova_cell0 database controller host access
  mysql_user: login_user=root login_password={{ root_dbpw }} name=nova password={{ nova_dbpw }} append_privs=true priv='nova_cell0.*:ALL' host={{ hostvars[inventory_hostname]['ansible_eth1']['ipv4']['address'] }}

- name: create nova user
  os_user: cloud=openstack state=present name=nova password={{ nova_pw }} update_password=on_create domain=default default_project=admin

- name: grant admin role on the nova user
  os_user_role: cloud=openstack user=nova role=admin project=service

- name: create nova service
  os_keystone_service: cloud=openstack state=present name=nova service_type=compute description="OpenStack Compute Service"

- name: create nova public endpoint
  os_keystone_endpoint: cloud=openstack service=nova endpoint_interface=public url=http://{{ hostvars[inventory_hostname]['ansible_eth1']['ipv4']['address'] }}:8774/v2.1 region=RegionOne state=present

- name: create nova internal endpoint
  os_keystone_endpoint: cloud=openstack service=nova endpoint_interface=internal url=http://{{ hostvars[inventory_hostname]['ansible_eth1']['ipv4']['address'] }}:8774/v2.1 region=RegionOne state=present

- name: create nova admin endpoint
  os_keystone_endpoint: cloud=openstack service=nova endpoint_interface=admin url=http://{{ hostvars[inventory_hostname]['ansible_eth1']['ipv4']['address'] }}:8774/v2.1 region=RegionOne state=present

# - name: create placement user
#   os_user: cloud=openstack state=present name=placement password={{ placement_pw }} update_password=on_create domain=default default_project=admin

# - name: grant admin role on the placement user
#   os_user_role: cloud=openstack user=placement role=admin project=service

# - name: create placement service
#   os_keystone_service: cloud=openstack state=present name=placement service_type=placement description="Placement API"

# - name: create placement public endpoint
#   os_keystone_endpoint: cloud=openstack service=placement endpoint_interface=public url=http://{{ hostvars[inventory_hostname]['ansible_eth1']['ipv4']['address'] }}:8778 region=RegionOne state=present

# - name: create placement internal endpoint
#   os_keystone_endpoint: cloud=openstack service=placement endpoint_interface=internal url=http://{{ hostvars[inventory_hostname]['ansible_eth1']['ipv4']['address'] }}:8778 region=RegionOne state=present

# - name: create placement admin endpoint
#   os_keystone_endpoint: cloud=openstack service=placement endpoint_interface=admin url=http://{{ hostvars[inventory_hostname]['ansible_eth1']['ipv4']['address'] }}:8778 region=RegionOne state=present

- name: install nova packages
  yum: name="{{ packages }}" state=latest
  vars:
    packages:
    - openstack-nova-api
    - openstack-nova-conductor
    - openstack-nova-novncproxy
    - openstack-nova-scheduler

- name: create nova configuration file
  template: src=nova.conf.j2 dest=/etc/nova/nova.conf

# - name: create placement httpd configuration file
#   template: src=00-nova-placement-api.conf.j2 dest=/etc/httpd/conf.d/00-nova-placement-api.conf

- name: restart httpd service
  service: name=httpd state=restarted enabled=yes

- name: populate api_db sync
  shell: nova-manage api_db sync
  become: yes
  become_user: nova

- name: populate cell_v2 map_cell0
  shell: nova-manage cell_v2 map_cell0
  become: yes
  become_user: nova

- name: populate cell_v2 create_cell
  shell: nova-manage cell_v2 create_cell --name=cell1 --verbose
  become: yes
  become_user: nova

- name: populate db sync
  shell: nova-manage db sync
  become: yes
  become_user: nova

- name: start nova-api service
  service: name=openstack-nova-api state=restarted enabled=yes

# - name: start nova-consoleauth service
#   service: name=openstack-nova-consoleauth state=restarted enabled=yes

- name: start nova-scheduler service
  service: name=openstack-nova-scheduler state=restarted enabled=yes

- name: start nova-conductor service
  service: name=openstack-nova-conductor state=restarted enabled=yes

- name: start nova-novncproxy service
  service: name=openstack-nova-novncproxy state=restarted enabled=yes



